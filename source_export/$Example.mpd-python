#!/usr/bin/env python

# http://mathhub.info/MitM/Models?Example


class MPD_Example
	laws = {}
	quantity_decls = {}

	def __init__(self):
		self.init_quantity_decls()
		self.init_laws()

	def __getitem__(self, quantity_decl_key):
		return self.quantity_decls[quantity_decl_key]

	def __call__(self, law_key):
		return self.laws[law_key]

	def init_quantity_decls(self):
		self.quantity_decls['u'] = type('QuantityDecl', (object,) , {
			'name': 'u',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?u',
			'dimension': 'ElectricPotential' 
			})()

		self.quantity_decls['v'] = type('QuantityDecl', (object,) , {
			'name': 'v',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?v',
			'dimension': 'ElectricPotential' 
			})()

		self.quantity_decls['i'] = type('QuantityDecl', (object,) , {
			'name': 'i',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?i',
			'dimension': 'Current' 
			})()

		self.quantity_decls['r'] = type('QuantityDecl', (object,) , {
			'name': 'r',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?r',
			'dimension': 'ElectricalResistance' 
			})()

		self.quantity_decls['q'] = type('QuantityDecl', (object,) , {
			'name': 'q',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?q',
			'dimension': 'ElectricCharge' 
			})()

		self.quantity_decls['t'] = type('QuantityDecl', (object,) , {
			'name': 't',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?t',
			'dimension': 'Time' 
			})()

		self.quantity_decls['c'] = type('QuantityDecl', (object,) , {
			'name': 'c',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?c',
			'dimension': 'ElectricalCapacitance' 
			})()

		self.quantity_decls['p'] = type('QuantityDecl', (object,) , {
			'name': 'p',
			'parent': 'http://mathhub.info/MitM/Models?1Cons',
			'path': 'http://mathhub.info/MitM/Models?1Cons?p',
			'dimension': 'Power' 
			})()

	def init_laws(self):
		self.laws['law1'] = type('Law', (object,) , {
			'parent': 'http://mathhub.info/MitM/Models?Example',
			'name': 'law1',
			'path': 'http://mathhub.info/MitM/Models?Example?law1',
			'u': lambda (r,i): (r * i),
			'i': lambda (u,r): (u / r),
			'r': lambda (u,i): (u / i) 
			})()

		self.laws['law2'] = type('Law', (object,) , {
			'parent': 'http://mathhub.info/MitM/Models?Example',
			'name': 'law2',
			'path': 'http://mathhub.info/MitM/Models?Example?law2',
			't': lambda (q,i): (q / i),
			'i': lambda (q,t): (q / t),
			'q': lambda (i,t): (i * t) 
			})()

		self.laws['law3'] = type('Law', (object,) , {
			'parent': 'http://mathhub.info/MitM/Models?Example',
			'name': 'law3',
			'path': 'http://mathhub.info/MitM/Models?Example?law3',
			'u': lambda (q,c): (q / c),
			'q': lambda (c,u): (c * u),
			'c': lambda (q,u): (q / u) 
			})()

		self.laws['law4'] = type('Law', (object,) , {
			'parent': 'http://mathhub.info/MitM/Models?Example',
			'name': 'law4',
			'path': 'http://mathhub.info/MitM/Models?Example?law4',
			'u': lambda (p,i): (p / i),
			'i': lambda (p,u): (p / u),
			'p': lambda (i,u): (i * u) 
			})()

		self.laws['law5'] = type('Law', (object,) , {
			'parent': 'http://mathhub.info/MitM/Models?Example',
			'name': 'law5',
			'path': 'http://mathhub.info/MitM/Models?Example?law5',
			'i': lambda (p,v): (p / v),
			'v': lambda (p,i): (p / i),
			'p': lambda (i,v): (i * v) 
			})()


